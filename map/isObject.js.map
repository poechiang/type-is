{"version":3,"names":[],"mappings":"","sources":["isObject.js"],"sourcesContent":["import fnToStr from '../core/fnToStr.js';\nimport getTypeRegex from '../core/getTypeRegex.js';\nimport isEmpty from './isEmpty.js';\n\n\nconst { getPrototypeOf: protoOf } = Object;\n\n\nconst class2Type = {}\n\nconst { hasOwnProperty: ownProp } = class2Type;\n\n\nconst isObject = ( value ) => getTypeRegex( 'object' ).test( fnToStr.call( value ) )\n\nisObject.empty = ( value ) => isObject( value ) && isEmpty( value );\n\nisObject.plain = ( value ) => {\n    let proto, Ctor;\n\n    if ( !value ) {\n        return false;\n    }\n\n    proto = protoOf( value );\n\n    if ( !proto ) {\n        return true;\n    }\n\n    Ctor = propertyOf( proto, \"constructor\" );\n    return typeof Ctor === \"function\" && ownProp.toString.call( Ctor ) === ownProp.toString.call( Object );\n\n};\nexport default isObject;"],"file":"../lib/isObject.js"}