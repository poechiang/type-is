{"version":3,"names":[],"mappings":"","sources":["isNumber.js"],"sourcesContent":["import fnToStr from '../core/fnToStr.js';\nimport getTypeRegex from '../core/getTypeRegex.js';\n\nconst isNumber = ( value ) => getTypeRegex( 'number' ).test( fnToStr.call( value ) );\n\nisNumber.float = ( value ) => {\n    if ( !isNumber( value ) ) {\n        return false;\n    }\n    if ( isNumber.infinity( value ) ) {\n        return true\n    }\n\n    return value !== 0 && ~~value !== value;\n}\n\nisNumber.infinity = ( value ) => ( value === Infinity || value === -Infinity );\n\nisNumber.int = ( value ) => ( isNumber( value ) && !isNumber.nan( value ) && ( isNumber.infinity( value ) || ( value % 1 ) === 0 ) );\n\nisNumber.even = ( value ) => ( isNumber.infinity( value ) || isNumber.int( value ) && !isNumber.nan( value ) && ( value % 2 ) === 0 );\n\nisNumber.odd = ( value ) => ( isNumber.infinity( value ) || isNumber.int( value ) && !isNumber.nan( value ) && ( value % 2 ) !== 0 );\n\nisNumber.nan = isNaN;\n\nexport default isNumber;"],"file":"../lib/isNumber.js"}